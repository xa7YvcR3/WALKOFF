walkoff: '0.1'
info:
  version: 1.0.0
  title: Utilities
  description: Miscellaneous utility actions
  contact:
    name: Walkoff Team
  license:
    name: Creative Commons
actions:
  System PRNG:
    run: actions.system_rand
    description: Returns random float between 0.0 and 1.0 using system entropy
    returns:
      Success:
        schema:
          type: number
  Round to N:
    run: actions.round_to_n
    description: Rounds a number to the specified number of decimals
    parameters:
        - name: number
          description: Number to round
          required: true
          type: number
        - name: places
          description: Decimal places to round to
          required: true
          type: integer
    returns:
      Success:
        schema:
          type: number
  echo object:
    run: actions.echo_object
    description: returns the same object passed into it
    parameters:
        - name: data
          description: The data to echo
          required: true
          schema:
            type: object
    returns:
      Success:
        schema:
          type: object
  echo array:
    run: actions.echo_array
    description: returns the same array passed into it
    parameters:
      - name: data
        description: array to echo
        required: true
        type: array
    returns:
      Success:
        description: echoed list
        schema:
          type: array
  'json select':
    run: actions.json_select
    description: Gets a selected sub element of a json
    parameters:
        - name: json_reference
          description: Action reference to the json object
          required: true
          type: string
        - name: element
          description: element of the json
          required: true
          type: string
    returns:
      Success:
        schema:
          type: object
  'list select':
    run: actions.list_select
    description: Gets an element from a list
    parameters:
        - name: list_reference
          description: Action reference to the list from which to select the element
          required: true
          type: string
        - name: index
          description: The index of the element
          required: True
          type: integer
    returns:
      Success:
        schema:
          type: object
  'linearly scale':
    run: actions.linear_scale
    description: Linearly scales a value which is limited to some min and max value to a number between a low and high value
    parameters:
        - name: value
          description: The value to scale
          required: true
          type: number
        - name: min_value
          description: The minimum value of the input (if value less than this, this value acts as a cutoff)
          required: true
          type: number
        - name: max_value
          description: The maximum value of the input (if value less than this, this value acts as a cutoff)
          required: true
          type: number
        - name: low_scale
          description: The lowest possible output value
          required: true
          type: number
          default: 0.0
        - name: high_scale
          description: The highest possible output value
          required: true
          type: number
          default: 1.0
    returns:
      Success:
        schema:
          type: number
  'divide':
    run: actions.divide
    description: Divides a number
    parameters:
        - name: value
          description: The value to divide
          required: true
          type: number
        - name: divisor
          description: The number to divide the input by
          required: true
          type: number
    returns:
      Success:
        schema:
          type: number
  'multiply':
    run: actions.multiply
    description: Multiplies a number
    parameters:
        - name: value
          description: The value to multiply
          required: true
          type: number
        - name: multiplier
          description: The number to multiply the input by
          required: true
          type: number
    returns:
      Success:
        schema:
          type: number
  'add':
    run: actions.add
    description: Adds two numbers
    parameters:
        - name: num1
          description: The first number
          required: true
          type: number
        - name: num2
          description: The second number
          required: true
          type: number
    returns:
      Success:
        schema:
          type: number
  'subtract':
    run: actions.subtract
    description: Subtracts a number from another number
    parameters:
        - name: value
          description: The starting value
          required: true
          type: number
        - name: subtractor
          description: The number to subtract from the input value
          required: true
          type: number
    returns:
      Success:
        schema:
          type: number
  'pause':
    run: actions.pause
    description: Pauses execution of a workflow for a given amount of time
    parameters:
        - name: seconds
          description: The seconds to pause the execution for
          required: true
          type: number
    returns:
      Success:
        schema:
          type: string
  write IPs to CSV:
    run: actions.write_ips_to_csv
    description: Writes a list of IPs to a CSV file
    parameters:
        - name: ips_reference
          description: Action reference to the list of IPs
          required: true
          type: string
        - name: path
          description: The path to the CSV file to be written to
          required: true
          type: string
    returns:
      Success:
        schema:
          type: string
  send text message:
    run: actions.send_text_message
    description: Send a text only message to users
    parameters:
      - name: subject
        type: string
        required: true
      - name: message
        type: string
        required: true
      - name: users
        type: array
        items:
          type: user
      - name: roles
        type: array
        items:
          type: role
    returns:
      Success:
        schema:
          type: string
          enum: ['success']
  request user approval:
    run: actions.basic_request_user_approval
    parameters:
      - name: users
        type: array
        items:
          type: user
      - name: roles
        type: array
        items:
          type: role
    returns:
      Success:
        schema:
          type: string
          enum: ['success']
  create text message component:
    run: actions.create_text_message_component
    description: Creates a text component for a message
    parameters:
      - name: text
        type: string
        required: true
    returns:
      Success:
        schema:
          type: object
          required: [type, data, requires_action]
          properties:
            type:
              type: string
            requires_action:
              type: boolean
              enum: [false]
            data:
              type: object
              required: [text]
              properties:
                text:
                  type: string
  create url message component:
    run: actions.create_url_message_component
    description: Creates a url component for a message
    parameters:
      - name: url
        type: string
        required: true
        format: uri
      - name: title
        type: string
        description: The title to display for this URL link
    returns:
      Success:
        schema:
          type: object
          required: [type, data, requires_action]
          properties:
            type:
              type: string
            requires_action:
              type: boolean
              enum: [false]
            data:
              type: object
              required: [url]
              properties:
                url:
                  type: string
                title:
                  type: string
  create accept decline message component:
    run: actions.create_accept_decline_message_component
    description: Creates a component for a message with buttons to accept or decline.
    returns:
      Success:
        schema:
          type: object
          required: [type, data, requires_action]
          properties:
            type:
              type: string
            requires_action:
              type: boolean
              enum: [true]
            data:
              type: object
  append text message component:
    run: actions.append_text_message_component
    description: Appends a text component to a message
    parameters:
      - name: message
        schema:
            type: object
        description: Existing message object
        required: true
      - name: text
        type: string
        required: true
    returns:
      Success:
        schema:
          type: object
          required: [body]
          properties:
            body:
              type: array
              description: body of the message
              items:
                type: object
                required: [type, data, requires_action]
                properties:
                  type:
                    type: string
                  requires_action:
                    type: boolean
                    enum: [false]
                  data:
                    type: object
            subject:
              type: string
  append url message component:
    run: actions.append_url_message_component
    description: Appends a url component to a message
    parameters:
      - name: message
        schema:
            type: object
        description: Existing message object
        required: true
      - name: url
        type: string
        required: true
        format: uri
      - name: title
        type: string
        description: The title to display for this URL link
    returns:
      Success:
        schema:
          type: object
          required: [body]
          properties:
            body:
              type: array
              description: body of the message
              items:
                type: object
                required: [type, data, requires_action]
                properties:
                  type:
                    type: string
                  requires_action:
                    type: boolean
                    enum: [false]
                  data:
                    type: object
            subject:
              type: string
  append accept decline message component:
    run: actions.append_accept_decline_message_component
    description: Appends an accept decline component to a message
    parameters:
      - name: message
        schema:
            type: object
        description: Existing message object
        required: true
    returns:
      Success:
        schema:
          type: object
          required: [body]
          properties:
            body:
              type: array
              description: body of the message
              items:
                type: object
                required: [type, data, requires_action]
                properties:
                  type:
                    type: string
                  requires_action:
                    type: boolean
                    enum: [false]
                  data:
                    type: object
            subject:
              type: string
  combine message:
    run: actions.combine_messages
    description: Combines two messages
    parameters:
      - name: message1
        schema:
            type: object
        description: Existing message object
        required: true
      - name: message2
        schema:
            type: object
        description: Existing message object to add to message1
        required: true
    returns:
      Success:
        schema:
          type: object
          required: [body]
          properties:
            body:
              type: array
              description: body of the message
              items:
                type: object
                required: [type, data, requires_action]
                properties:
                  type:
                    type: string
                  requires_action:
                    type: boolean
                    enum: [false]
                  data:
                    type: object
            subject:
              type: string
  set message subject:
    run: actions.set_message_subject
    description: Sets the subject of a message
    parameters:
      - name: message
        schema:
            type: object
        description: Existing message object
        required: true
      - name: subject
        type: string
        required: true
    returns:
      Success:
        schema:
          type: object
          required: [body]
          properties:
            body:
              type: array
              description: body of the message
              items:
                type: object
                required: [type, data, requires_action]
                properties:
                  type:
                    type: string
                  requires_action:
                    type: boolean
                    enum: [false]
                  data:
                    type: object
            subject:
              type: string
  create empty message:
    run: actions.create_empty_message
    description: Creates a message with no body
    parameters:
      - name: subject
        type: string
    returns:
      Success:
        schema:
          type: object
          required: [body]
          properties:
            body:
              type: array
              description: body of the message
              items:
                type: object
                required: [type, data, requires_action]
                properties:
                  type:
                    type: string
                  requires_action:
                    type: boolean
                    enum: [false]
                  data:
                    type: object
            subject:
              type: string
  send message:
    run: actions.send_full_message
    description: Sends a message
    parameters:
      - name: message
        schema:
            type: object
        description: Existing message object
        required: true
      - name: users
        type: array
        items:
          type: user
      - name: roles
        type: array
        items:
          type: role
    returns:
      Success:
        schema:
          type: string
          enum: ['success']
  'accept/decline':
    run: actions.accept_decline
    description: responds to an accept/decline message
    parameters:
      - name: action
        type: string
        required: true
    default_return: Accepted
    returns:
      Accepted:
        schema:
          type: boolean
      Declined:
        failure: true
        schema:
          type: boolean
conditions:
  regex match:
    run: conditions.regMatch
    description: Matches an input against a regular expression
    data_in: value
    parameters:
      - name: value
        description: The input value
        required: true
        type: string
      - name: regex
        description: The regular expression to match
        required: true
        type: string
  number compare:
    run: conditions.count
    description: Compares two numbers
    data_in: value
    parameters:
      - name: value
        description: The input value
        required: true
        type: number
      - name: operator
        description: The comparison operator ('g', 'ge', etc.)
        required: true
        type: string
        enum: [g, ge, l, le, e]
        default: e
      - name: threshold
        description: The value with which to compare the input
        required: true
        type: number
  always true:
    run: conditions.always_true
    data_in: value
    parameters:
      - name: value
        description: the input value
        type: string
        required: true
  always false:
    run: conditions.always_false
    data_in: value
    parameters:
      - name: value
        description: the input value
        type: string
        required: true
  echo boolean:
    run: conditions.echo_boolean
    data_in: value
    parameters:
      - name: value
        description: the input value
        type: boolean
        required: true
  reverse boolean:
    run: conditions.reverse_boolean
    description: Returns the inverse of the boolean value provided
    data_in: value
    parameters:
      - name: value
        description: the input value
        type: boolean
        required: true
  'accept/decline':
    run: conditions.accept_decline
    description: Used for accept/decline action from messages. If used as a trigger, next action will only run if authorized user clicks "accept"
    data_in: value
    parameters:
      - name: value
        description: accept or decline
        type: string
        required: true
transforms:
  length:
    run: transforms.length
    description: Returns the length of a collection
    data_in: value
    parameters:
      - name: value
        description: The input collection
        required: true
        type: string
    returns:
      Success:
        description: The length of the collection
        schema:
          type: object
  select json:
    run: transforms.json_select
    description: selects an element from a JSON object
    data_in: json_in
    parameters:
        - name: json_in
          required: true
          type: object
        - name: element
          type: string
          required: true
    returns:
      Success:
        schema:
          type: object
  select list:
    run: transforms.list_select
    description: selects an element from a list
    data_in: list_in
    parameters:
        - name: list_in
          required: true
          type: object
        - name: index
          type: number
          required: true
    returns:
      Success:
        schema:
          type: object
  linear scale:
    run: transforms.linear_scale
    data_in: value
    description: Scale a value linearly between a minimum and a maximum.
    parameters:
      - name: value
        type: number
        required: true
      - name: min_value
        type: number
        description: minimum value of the input
        required: true
      - name: max_value
        type: number
        description: maximum value of the input
        required: true
      - name: low_scale
        type: number
        description: minimum value of the output
        required: true
        default: 0.0
      - name: high_scale
        type: number
        description: maximum value of the output
        required: true
        default: 1.0
    returns:
      Success:
        schema:
          type: number
  divide:
    run: transforms.divide
    description: Divides a number
    data_in: value
    parameters:
      - name: value
        type: number
        required: true
      - name: divisor
        type: number
        required: true
    returns:
      Success:
        schema:
          type: number
  multiply:
    run: transforms.multiply
    description: Multiplies a number
    data_in: value
    parameters:
      - name: value
        type: number
        required: true
      - name: multiplier
        type: number
        required: true
    returns:
      Success:
        schema:
          type: number
  add:
    run: transforms.add
    description: Adds a number
    data_in: num1
    parameters:
      - name: num1
        type: number
        required: true
      - name: num2
        type: number
        required: true
    returns:
      Success:
        schema:
          type: number
  subtract:
    run: transforms.subtract
    description: Subtracts a number from the input
    data_in: value
    parameters:
      - name: value
        type: number
        required: true
      - name: subtrahend
        type: number
        required: true
    returns:
      Success:
        schema:
          type: number